{"ast":null,"code":"var _jsxFileName = \"/mnt/c/projects/src/App.js\";\nimport \"./App.css\";\nimport image1 from \"./Peanut-Butter-Banana-Smoothie.jpg\";\nimport image2 from \"./Sardines-and-Saltines.jpg\";\nimport React, { Component } from \"react\"; // Declare our two recipes in JSON format.\n\nconst recipes = [{\n  image: image1,\n  title: \"Banana Peanut Smoothie\",\n  summary: \"Yummy, easy, and smooth!\",\n  steps: \"1. Put banana, peanut butter, milk and ice cream in blender. 2. Blend for 10 seconds. 3. Serve.\",\n  ingredients: \"1 ripe banana, 1 Tbs of peanut butter, 3/4 cup of milk, 1 ice cube\"\n}, {\n  image: image2,\n  title: \"Sardines & Saltines\",\n  summary: \"Hearty & healthy\",\n  steps: \"1. Open sardine can. 2. Place sardines, peanut butter, and garnish on whole wheat crackers. 3. Serve.\",\n  ingredients: \"1 can of sardines, 8 whole wheat saltine crackers, peanut butter (optional), lemon slice (optional), and parsley (optional)\"\n}]; // Called when Previous or Next buttons is clicked. Determines which recipe to display next.\n\nfunction displayOtherRecipe(index) {\n  if (index == 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.previousButtonClick = oldIndex => {\n      this.selectedIndex = displayOtherRecipe(oldIndex);\n      this.setState({\n        isClicked: this.isClicked,\n        selectedIndex: this.selectedIndex\n      });\n    };\n\n    this.nextButtonClick = oldIndex => {\n      this.selectedIndex = displayOtherRecipe(oldIndex);\n      this.setState({\n        isClicked: this.isClicked,\n        selectedIndex: this.selectedIndex\n      });\n    };\n\n    this.imageClick = (index, wasClicked) => {\n      this.isClicked = !wasClicked;\n      this.selectedIndex = index;\n      this.setState({\n        isClicked: this.isClicked,\n        selectedIndex: this.selectedIndex\n      });\n    };\n\n    this.state = {\n      recipes\n    };\n    this.isClicked = false; // Determines if a recipe at homepage has been clicked.\n\n    this.selectedIndex = -1; // Keeps track of which index into the recipes array was clicked.\n\n    this.imageClick = this.imageClick.bind(this);\n    this.previousButtonClick = this.previousButtonClick.bind(this);\n    this.nextButtonClick = this.nextButtonClick.bind(this);\n  } // Called when Previous button is clicked.\n\n\n  render() {\n    return !this.isClicked ? // A recipe has NOT yet been clicked; display the homepage with overview of recipes (nothing has been clicked yet).\n    React.createElement(\"div\", {\n      class: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, recipes.map((item, index) => React.createElement(\"div\", {\n      key: item.objectID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"a\", Object.assign({\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"button\",\n      className: \"card-link\"\n    }, console.log(\"clicked=\" + this.isClicked), {\n      onClick: () => this.imageClick(index, this.isClicked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.state.isClicked ? true : false, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, item.title)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, item.summary)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))))) : // A recipe has been clicked; display recipe details.\n    React.createElement(\"div\", {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: recipes[this.selectedIndex].objectID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: recipes[this.selectedIndex].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, recipes[this.selectedIndex].title)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, recipes[this.selectedIndex].summary)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Ingredients: \"), recipes[this.selectedIndex].ingredients)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Steps: \"), recipes[this.selectedIndex].steps)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"bottom-left-button\",\n      type: \"button\",\n      value: \"Previous\",\n      onClick: () => this.previousButtonClick(this.selectedIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"bottom-right-button\",\n      type: \"button\",\n      value: \"Next\",\n      onClick: () => this.nextButtonClick(this.selectedIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/projects/src/App.js"],"names":["image1","image2","React","Component","recipes","image","title","summary","steps","ingredients","displayOtherRecipe","index","App","constructor","props","previousButtonClick","oldIndex","selectedIndex","setState","isClicked","nextButtonClick","imageClick","wasClicked","state","bind","render","map","item","objectID","cursor","console","log"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport image1 from \"./Peanut-Butter-Banana-Smoothie.jpg\";\nimport image2 from \"./Sardines-and-Saltines.jpg\";\nimport React, { Component } from \"react\";\n\n// Declare our two recipes in JSON format.\nconst recipes = [\n  {\n    image: image1,\n    title: \"Banana Peanut Smoothie\",\n    summary: \"Yummy, easy, and smooth!\",\n    steps:\n      \"1. Put banana, peanut butter, milk and ice cream in blender. 2. Blend for 10 seconds. 3. Serve.\",\n    ingredients:\n      \"1 ripe banana, 1 Tbs of peanut butter, 3/4 cup of milk, 1 ice cube\"\n  },\n  {\n    image: image2,\n    title: \"Sardines & Saltines\",\n    summary: \"Hearty & healthy\",\n    steps:\n      \"1. Open sardine can. 2. Place sardines, peanut butter, and garnish on whole wheat crackers. 3. Serve.\",\n    ingredients:\n      \"1 can of sardines, 8 whole wheat saltine crackers, peanut butter (optional), lemon slice (optional), and parsley (optional)\"\n  }\n];\n\n// Called when Previous or Next buttons is clicked. Determines which recipe to display next.\nfunction displayOtherRecipe(index) {\n  if (index == 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { recipes };\n\n    this.isClicked = false; // Determines if a recipe at homepage has been clicked.\n    this.selectedIndex = -1; // Keeps track of which index into the recipes array was clicked.\n    this.imageClick = this.imageClick.bind(this);\n    this.previousButtonClick = this.previousButtonClick.bind(this);\n    this.nextButtonClick = this.nextButtonClick.bind(this);\n  }\n\n  // Called when Previous button is clicked.\n  previousButtonClick = oldIndex => {\n    this.selectedIndex = displayOtherRecipe(oldIndex);\n    this.setState({\n      isClicked: this.isClicked,\n      selectedIndex: this.selectedIndex\n    });\n  };\n\n  // Called when Next button is clicked.\n  nextButtonClick = oldIndex => {\n    this.selectedIndex = displayOtherRecipe(oldIndex);\n    this.setState({\n      isClicked: this.isClicked,\n      selectedIndex: this.selectedIndex\n    });\n  };\n\n  // imageClick: called when a recipe picture, title, or summary is clicked\n  // Will take user to page that displays the details of the recipe.\n  imageClick = (index, wasClicked) => {\n    this.isClicked = !wasClicked;\n    this.selectedIndex = index;\n    this.setState({\n      isClicked: this.isClicked,\n      selectedIndex: this.selectedIndex\n    });\n  };\n\n  render() {\n    return !this.isClicked ? (\n      // A recipe has NOT yet been clicked; display the homepage with overview of recipes (nothing has been clicked yet).\n      <div class=\"page\">\n        {recipes.map((item, index) => (\n          <div key={item.objectID}>\n            <a\n              style={{ cursor: \"pointer\" }}\n              type=\"button\"\n              className=\"card-link\"\n              {...console.log(\"clicked=\" + this.isClicked)}\n              onClick={() => this.imageClick(index, this.isClicked)}\n            >\n              {this.state.isClicked ? true : false}\n              <span>\n                <img src={item.image} />\n              </span>\n              <span>\n                <h2 id={item.title}>{item.title}</h2>\n              </span>\n              <span>\n                <h4>{item.summary}</h4>\n              </span>\n              <br />\n              <br />\n            </a>\n          </div>\n        ))}\n      </div>\n    ) : (\n      // A recipe has been clicked; display recipe details.\n      <div id=\"page\">\n        <div key={recipes[this.selectedIndex].objectID}>\n          <span>\n            <img src={recipes[this.selectedIndex].image} />\n          </span>\n          <span>\n            <h2>{recipes[this.selectedIndex].title}</h2>\n          </span>\n          <span>\n            <h4>{recipes[this.selectedIndex].summary}</h4>\n          </span>\n          <span>\n            <h4>\n              <i>Ingredients: </i>\n              {recipes[this.selectedIndex].ingredients}\n            </h4>\n          </span>\n          <span>\n            <h4>\n              <i>Steps: </i>\n              {recipes[this.selectedIndex].steps}\n            </h4>\n          </span>\n          <div>\n            <input\n              style={{ cursor: \"pointer\" }}\n              className=\"bottom-left-button\"\n              type=\"button\"\n              value=\"Previous\"\n              onClick={() => this.previousButtonClick(this.selectedIndex)}\n            />\n            <input\n              style={{ cursor: \"pointer\" }}\n              className=\"bottom-right-button\"\n              type=\"button\"\n              value=\"Next\"\n              onClick={() => this.nextButtonClick(this.selectedIndex)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}