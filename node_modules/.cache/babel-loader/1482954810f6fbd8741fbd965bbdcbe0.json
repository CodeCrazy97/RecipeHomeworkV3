{"ast":null,"code":"var _jsxFileName = \"/home/ethan_vaughan/hackernews/src/App.js\";\nimport \"./App.css\";\nimport image1 from \"./Peanut-Butter-Banana-Smoothie.jpg\";\nimport React, { Component } from \"react\"; // Declare our two recipes in JSON format.\n\nconst recipes = [{\n  image: image1,\n  title: \"Banana Peanut Smoothie\",\n  summary: \"Yummy, easy, and smooth!\",\n  steps: \"1. Hello 2. World\",\n  ingredients: \"1 ripe banana, 1 Tbs of peanut butter, 3/4 cup of milk, 1 ice cube\"\n}, {\n  image: image1,\n  title: \"Healthy Cookies\",\n  summary: \"Hearty & healthy\",\n  steps: \"1. Get peanut butter. 2. Whole wheat flour. 3. Eggs.\",\n  ingredients: \"2 cups whole oats, 1.5 cups whole wheat flour, 2 Tbs of peanut butter, 2 eggs\"\n}];\n/*\nconst imageClick = () => {\n  console.log(\"clicked : \"); // works\n};\n*/\n\nfunction imageClick(title, index) {\n  console.log(\"title : \" + title);\n  return React.createElement(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Ingredients: \", recipes[index].ingredients));\n}\n\n;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes\n    };\n  }\n  /*\n  // imageClick: called when a recipe picture, title, or summary is clicked\n  // Will take user to page that displays the details of the recipe.\n  imageClick = (title, index) => {\n    console.log(\"title : \" + title);\n    return (\n      <div key={index}>\n        <h4>Ingredients: {recipes[index].ingredients}</h4>\n      </div>\n    );\n  };\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.recipes.map((item, index) => React.createElement(\"div\", {\n      key: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      type: \"button\",\n      className: \"card-link\",\n      onClick: () => imageClick(item.title, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item.title)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, item.summary)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))))));\n  }\n\n}\n/*\n this.state = {\n      list: [42, 33, 68],\n    };\n  }\n  onUpdateItem = i => {\n    ...\n  };\n\n\n<ul>\n  {this.state.list.map((item, index) => (\n    <li key={item}>\n      The person is {item} years old.\n      <button\n        type=\"button\"\n        onClick={() => this.onUpdateItem(index)}\n      >\n        Make me one year older\n      </button>\n    </li>\n  ))}\n</ul>\n\n*/\n\n\nconst Recipe = recipes => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: recipes.image,\n  onClick: this.imageClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, \" \", recipes.title, \" \")); //React.render(<App url=\"/Peanut-Butter-Banana-Smoothie.jpg\" />, document.body);\n\n\nexport default App;\n/*\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst list = [\n  {\n    title: \"React\",\n    url: \"https://facebook.github.io/react/\",\n    author: \"Jordan Walke\",\n    num_comments: 3,\n    points: 4,\n    objectID: 0\n  },\n  {\n    title: \"Redux\",\n    url: \"https://github.com/reactjs/redux\",\n    author: \"Dan Abramov, Andrew Clark\",\n    num_comments: 2,\n    points: 5,\n    objectID: 1\n  }\n];\n\nfunction isSearched(searchTerm) {\n  return function(item) {\n    return function(item) {\n      return (\n        !searchTerm ||\n        item.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    };\n  };\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list,\n      searchTerm: \"\"\n    };\n\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n    const updatedList = this.state.list.filter(isNotId);\n    this.setState({ list: updatedList });\n  }\n\n  onClick() {\n    console.log(\"Clicked!\");\n  }\n\n  render() {\n    const { searchTerm, list } = this.state;\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search value={searchTerm} onChange={this.onSearchChange}>\n            {\" \"}\n            Search{\" \"}\n          </Search>\n        </div>\n        <Table list={list} pattern={searchTerm} onDismiss={this.onDismiss} />\n      </div>\n    );\n  }\n}\n\nconst Table = ({ list, pattern, onDismiss }) => (\n  <div className=\"table\">\n    {\" \"}\n    {list.filter(isSearched(pattern)).map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={midColumn}> {item.author} </span>\n        <span style={smallColumn}> {item.num_comments} </span>\n        <span style={smallColumn}> {item.points} </span>\n        <span style={smallColumn}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            {\" \"}\n            Dismiss{\" \"}\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Search = ({ value, onChange, children }) => (\n  <form>\n    {\" \"}\n    {children}\n    <input type=\"text\" value={value} onChange={onChange} />\n  </form>\n);\n\nclass Button extends Component {\n  render() {\n    const { onClick, className = \"\", children } = this.props;\n    return (\n      <button onClick={onClick} className={className} type=\"button\">\n        {\" \"}\n        {children}\n      </button>\n    );\n  }\n}\n\nconst largeColumn = { width: \"40%\" };\nconst midColumn = { width: \"30%\" };\nconst smallColumn = { width: \"10%\" };\n\nexport default App;\n\n*/","map":{"version":3,"sources":["/home/ethan_vaughan/hackernews/src/App.js"],"names":["image1","React","Component","recipes","image","title","summary","steps","ingredients","imageClick","index","console","log","App","constructor","props","state","render","map","item","Recipe"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAEJ,MADT;AAEEK,EAAAA,KAAK,EAAE,wBAFT;AAGEC,EAAAA,OAAO,EAAE,0BAHX;AAIEC,EAAAA,KAAK,EAAE,mBAJT;AAKEC,EAAAA,WAAW,EACT;AANJ,CADc,EASd;AACEJ,EAAAA,KAAK,EAAEJ,MADT;AAEEK,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,OAAO,EAAE,kBAHX;AAIEC,EAAAA,KAAK,EAAE,sDAJT;AAKEC,EAAAA,WAAW,EACT;AANJ,CATc,CAAhB;AAmBA;;;;;;AAMA,SAASC,UAAT,CAAoBJ,KAApB,EAA2BK,KAA3B,EAAkC;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaP,KAAzB;AACA,SACE;AAAK,IAAA,GAAG,EAAEK,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBP,OAAO,CAACO,KAAD,CAAP,CAAeF,WAAjC,CADF,CADF;AAKD;;AAAA;;AAGD,MAAMK,GAAN,SAAkBX,SAAlB,CAA4B;AAC1BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEb,MAAAA;AAAF,KAAb;AACD;AAED;;;;;;;;;;;;;;AAaAc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWb,OAAX,CAAmBe,GAAnB,CAAuB,CAACC,IAAD,EAAOT,KAAP,KACtB;AAAK,MAAA,GAAG,EAAES,IAAI,CAACd,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,MAAA,OAAO,EAAE,MAAMI,UAAU,CAACU,IAAI,CAACd,KAAN,EAAaK,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAES,IAAI,CAACf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAEe,IAAI,CAACd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBc,IAAI,CAACd,KAA1B,CADF,CARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKc,IAAI,CAACb,OAAV,CADF,CAXF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF,CADD,CADH,CADF,CADF;AA2BD;;AA/CyB;AAkD5B;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAMc,MAAM,GAAGjB,OAAO,IACpB;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAEA,OAAO,CAACC,KAAlB;AAAyB,EAAA,OAAO,EAAE,KAAKK,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAMN,OAAO,CAACE,KAAd,MAFF,CADF,C,CAOA;;;AAEA,eAAeQ,GAAf;AAEA","sourcesContent":["import \"./App.css\";\nimport image1 from \"./Peanut-Butter-Banana-Smoothie.jpg\";\nimport React, { Component } from \"react\";\n\n// Declare our two recipes in JSON format.\nconst recipes = [\n  {\n    image: image1,\n    title: \"Banana Peanut Smoothie\",\n    summary: \"Yummy, easy, and smooth!\",\n    steps: \"1. Hello 2. World\",\n    ingredients:\n      \"1 ripe banana, 1 Tbs of peanut butter, 3/4 cup of milk, 1 ice cube\"\n  },\n  {\n    image: image1,\n    title: \"Healthy Cookies\",\n    summary: \"Hearty & healthy\",\n    steps: \"1. Get peanut butter. 2. Whole wheat flour. 3. Eggs.\",\n    ingredients:\n      \"2 cups whole oats, 1.5 cups whole wheat flour, 2 Tbs of peanut butter, 2 eggs\"\n  }\n];\n\n/*\nconst imageClick = () => {\n  console.log(\"clicked : \"); // works\n};\n*/\n\nfunction imageClick(title, index) {\n  console.log(\"title : \" + title);\n  return (\n    <div key={index}>\n      <h4>Ingredients: {recipes[index].ingredients}</h4>\n    </div>\n  );\n};\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { recipes };\n  }\n\n  /*\n  // imageClick: called when a recipe picture, title, or summary is clicked\n  // Will take user to page that displays the details of the recipe.\n  imageClick = (title, index) => {\n    console.log(\"title : \" + title);\n    return (\n      <div key={index}>\n        <h4>Ingredients: {recipes[index].ingredients}</h4>\n      </div>\n    );\n  };\n  */\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.recipes.map((item, index) => (\n            <div key={item.title}>\n              <a\n                type=\"button\"\n                className=\"card-link\"\n                onClick={() => imageClick(item.title, index)}\n              >\n                <span>\n                  <img src={item.image} />\n                </span>\n                <span>\n                  <h2 id={item.title}>{item.title}</h2>\n                </span>\n                <span>\n                  <h4>{item.summary}</h4>\n                </span>\n                <br />\n                <br />\n              </a>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\n/*\n this.state = {\n      list: [42, 33, 68],\n    };\n  }\n  onUpdateItem = i => {\n    ...\n  };\n\n\n<ul>\n  {this.state.list.map((item, index) => (\n    <li key={item}>\n      The person is {item} years old.\n      <button\n        type=\"button\"\n        onClick={() => this.onUpdateItem(index)}\n      >\n        Make me one year older\n      </button>\n    </li>\n  ))}\n</ul>\n\n*/\n\nconst Recipe = recipes => (\n  <div className=\"table\">\n    <img src={recipes.image} onClick={this.imageClick} />\n    <h3> {recipes.title} </h3>\n  </div>\n);\n\n//React.render(<App url=\"/Peanut-Butter-Banana-Smoothie.jpg\" />, document.body);\n\nexport default App;\n\n/*\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst list = [\n  {\n    title: \"React\",\n    url: \"https://facebook.github.io/react/\",\n    author: \"Jordan Walke\",\n    num_comments: 3,\n    points: 4,\n    objectID: 0\n  },\n  {\n    title: \"Redux\",\n    url: \"https://github.com/reactjs/redux\",\n    author: \"Dan Abramov, Andrew Clark\",\n    num_comments: 2,\n    points: 5,\n    objectID: 1\n  }\n];\n\nfunction isSearched(searchTerm) {\n  return function(item) {\n    return function(item) {\n      return (\n        !searchTerm ||\n        item.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    };\n  };\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list,\n      searchTerm: \"\"\n    };\n\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n    const updatedList = this.state.list.filter(isNotId);\n    this.setState({ list: updatedList });\n  }\n\n  onClick() {\n    console.log(\"Clicked!\");\n  }\n\n  render() {\n    const { searchTerm, list } = this.state;\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search value={searchTerm} onChange={this.onSearchChange}>\n            {\" \"}\n            Search{\" \"}\n          </Search>\n        </div>\n        <Table list={list} pattern={searchTerm} onDismiss={this.onDismiss} />\n      </div>\n    );\n  }\n}\n\nconst Table = ({ list, pattern, onDismiss }) => (\n  <div className=\"table\">\n    {\" \"}\n    {list.filter(isSearched(pattern)).map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={midColumn}> {item.author} </span>\n        <span style={smallColumn}> {item.num_comments} </span>\n        <span style={smallColumn}> {item.points} </span>\n        <span style={smallColumn}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            {\" \"}\n            Dismiss{\" \"}\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Search = ({ value, onChange, children }) => (\n  <form>\n    {\" \"}\n    {children}\n    <input type=\"text\" value={value} onChange={onChange} />\n  </form>\n);\n\nclass Button extends Component {\n  render() {\n    const { onClick, className = \"\", children } = this.props;\n    return (\n      <button onClick={onClick} className={className} type=\"button\">\n        {\" \"}\n        {children}\n      </button>\n    );\n  }\n}\n\nconst largeColumn = { width: \"40%\" };\nconst midColumn = { width: \"30%\" };\nconst smallColumn = { width: \"10%\" };\n\nexport default App;\n\n*/\n"]},"metadata":{},"sourceType":"module"}