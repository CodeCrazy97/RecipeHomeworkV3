{"ast":null,"code":"var _jsxFileName = \"/home/ethan_vaughan/hackernews/src/App.js\";\nimport \"./App.css\";\nimport \"./Page2.js\";\nimport image1 from \"./Peanut-Butter-Banana-Smoothie.jpg\";\nimport React, { Component } from \"react\";\nimport { throwStatement } from \"@babel/types\"; // Declare our two recipes in JSON format.\n\nconst recipes = [{\n  image: image1,\n  title: \"Banana Peanut Smoothie\",\n  summary: \"Yummy, easy, and smooth!\",\n  steps: \"1. Hello 2. World\",\n  ingredients: \"1 ripe banana, 1 Tbs of peanut butter, 3/4 cup of milk, 1 ice cube\"\n}, {\n  image: image1,\n  title: \"Healthy Cookies\",\n  summary: \"Hearty & healthy\",\n  steps: \"1. Get peanut butter. 2. Whole wheat flour. 3. Eggs.\",\n  ingredients: \"2 cups whole oats, 1.5 cups whole wheat flour, 2 Tbs of peanut butter, 2 eggs\"\n}];\n/*\nconst imageClick = () => {\n  console.log(\"clicked : \"); // works\n};\n*/\n\n/*\n// imageClick: called when a recipe picture, title, or summary is clicked\n// This function first removes all elements on the homepage, then it displays the details of the recipe\n// that was clicked.\nfunction imageClick(index) {\n  console.log(\"OUTSIDE 'MAIN'. index selected = \" + index);\n  const myNode = document.getElementById(\"page\");\n  while (myNode.firstChild) {\n    myNode.removeChild(myNode.firstChild);\n  }\n}\n*/\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.imageClick = (index, wasClicked) => {\n      console.log(\"wasClicked = \" + wasClicked);\n      this.isClicked = !wasClicked;\n      this.selectedIndex = index;\n      this.setState({\n        isClicked: this.isClicked,\n        selectedIndex: this.selectedIndex\n      });\n      console.log(\"INSIDE 'MAIN'. index selected = \" + this.selectedIndex + \". isClicked ? \" + this.isClicked);\n      /*\n      const myNode = document.getElementById(\"page\");\n      while (myNode.firstChild) {\n        myNode.removeChild(myNode.firstChild);\n      }\n      */\n    };\n\n    this.state = {\n      recipes\n    };\n    this.isClicked = false;\n    this.selectedIndex = -1; // Keeps track of which index into the recipes array was clicked.\n\n    this.imageClick = this.imageClick.bind(this);\n  } // imageClick: called when a recipe picture, title, or summary is clicked\n  // Will take user to page that displays the details of the recipe.\n\n\n  render() {\n    console.log(\"number of recipes: \" + recipes.length);\n    return !this.isClicked ? // A recipe has NOT yet been clicked; display the homepage with overview of recipes (nothing has been clicked yet).\n    React.createElement(\"div\", {\n      class: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, console.log(\"called.\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, recipes.map((item, index) => React.createElement(\"div\", {\n      key: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"a\", Object.assign({\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"button\",\n      className: \"card-link\"\n    }, console.log(\"clicked=\" + this.isClicked), {\n      onClick: () => this.imageClick(index, this.isClicked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.state.isClicked ? true : false, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.title)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, item.summary)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))))) : // A recipe has been clicked; display recipe details.\n    React.createElement(\"div\", {\n      id: \"recipeDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: recipes[this.selectedIndex].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, recipes[this.selectedIndex].title)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, recipes[this.selectedIndex].summary)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Ingredients: \"), recipes[this.selectedIndex].ingredients)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Steps: \"), recipes[this.selectedIndex].steps)), React.createElement(\"div\", {\n      className: \"bottom-right-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"bottom-right-button\",\n      type: \"button\",\n      value: \"Next\",\n      onClick: console.log(\"clicked bottom right button\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction Recipe(recipes, index) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Ingredients: \", recipes[index].ingredients);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ethan_vaughan/hackernews/src/App.js"],"names":["image1","React","Component","throwStatement","recipes","image","title","summary","steps","ingredients","App","constructor","props","imageClick","index","wasClicked","console","log","isClicked","selectedIndex","setState","state","bind","render","length","map","item","cursor","Recipe"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport \"./Page2.js\";\nimport image1 from \"./Peanut-Butter-Banana-Smoothie.jpg\";\nimport React, { Component } from \"react\";\nimport { throwStatement } from \"@babel/types\";\n\n// Declare our two recipes in JSON format.\nconst recipes = [\n  {\n    image: image1,\n    title: \"Banana Peanut Smoothie\",\n    summary: \"Yummy, easy, and smooth!\",\n    steps: \"1. Hello 2. World\",\n    ingredients:\n      \"1 ripe banana, 1 Tbs of peanut butter, 3/4 cup of milk, 1 ice cube\"\n  },\n  {\n    image: image1,\n    title: \"Healthy Cookies\",\n    summary: \"Hearty & healthy\",\n    steps: \"1. Get peanut butter. 2. Whole wheat flour. 3. Eggs.\",\n    ingredients:\n      \"2 cups whole oats, 1.5 cups whole wheat flour, 2 Tbs of peanut butter, 2 eggs\"\n  }\n];\n\n/*\nconst imageClick = () => {\n  console.log(\"clicked : \"); // works\n};\n*/\n\n/*\n// imageClick: called when a recipe picture, title, or summary is clicked\n// This function first removes all elements on the homepage, then it displays the details of the recipe\n// that was clicked.\nfunction imageClick(index) {\n  console.log(\"OUTSIDE 'MAIN'. index selected = \" + index);\n  const myNode = document.getElementById(\"page\");\n  while (myNode.firstChild) {\n    myNode.removeChild(myNode.firstChild);\n  }\n}\n*/\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { recipes };\n\n    this.isClicked = false;\n    this.selectedIndex = -1; // Keeps track of which index into the recipes array was clicked.\n    this.imageClick = this.imageClick.bind(this);\n  }\n\n  // imageClick: called when a recipe picture, title, or summary is clicked\n  // Will take user to page that displays the details of the recipe.\n  imageClick = (index, wasClicked) => {\n    console.log(\"wasClicked = \" + wasClicked);\n    this.isClicked = !wasClicked;\n    this.selectedIndex = index;\n    this.setState({\n      isClicked: this.isClicked,\n      selectedIndex: this.selectedIndex\n    });\n    console.log(\n      \"INSIDE 'MAIN'. index selected = \" +\n        this.selectedIndex +\n        \". isClicked ? \" +\n        this.isClicked\n    );\n    /*\n    const myNode = document.getElementById(\"page\");\n    while (myNode.firstChild) {\n      myNode.removeChild(myNode.firstChild);\n    }\n    */\n  };\n\n  render() {\n    console.log(\"number of recipes: \" + recipes.length);\n    return !this.isClicked ? (\n      // A recipe has NOT yet been clicked; display the homepage with overview of recipes (nothing has been clicked yet).\n      <div class=\"page\">\n        {console.log(\"called.\")}\n        <ul>\n          {recipes.map((item, index) => (\n            <div key={item.title}>\n              <a\n                style={{cursor: \"pointer\"}}\n                type=\"button\"\n                className=\"card-link\"\n                {...console.log(\"clicked=\" + this.isClicked)}\n                onClick={() => this.imageClick(index, this.isClicked)}\n              >\n                {this.state.isClicked ? true : false}\n                <span>\n                  <img src={item.image} />\n                </span>\n                <span>\n                  <h2 id={item.title}>{item.title}</h2>\n                </span>\n                <span>\n                  <h4>{item.summary}</h4>\n                </span>\n                <br />\n                <br />\n              </a>\n            </div>\n          ))}\n        </ul>\n      </div>\n    ) : (\n      // A recipe has been clicked; display recipe details.\n      <div id=\"recipeDetails\">\n        <span>\n          <img src={recipes[this.selectedIndex].image} />\n        </span>\n        <span>\n          <h2>{recipes[this.selectedIndex].title}</h2>\n        </span>\n        <span>\n          <h4>{recipes[this.selectedIndex].summary}</h4>\n        </span>\n        <span>\n          <h4>\n            <i>Ingredients: </i>\n            {recipes[this.selectedIndex].ingredients}\n          </h4>\n        </span>\n        <span>\n          <h4>\n            <i>Steps: </i>\n            {recipes[this.selectedIndex].steps}\n          </h4>\n        </span>\n        <div className=\"bottom-right-button\">\n          <input\n            className=\"bottom-right-button\"\n            type=\"button\"\n            value=\"Next\"\n            onClick={console.log(\"clicked bottom right button\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Recipe(recipes, index) {\n  return <h1>Ingredients: {recipes[index].ingredients}</h1>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}